{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/app/admin/services/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"@/redux/app/store\";\r\nimport { fetchServices, deleteService } from \"../../../redux/features/ServicesSlice\";\r\n\r\ninterface Service {\r\n  _id: string;\r\n  serviceName: string;\r\n  serviceCharge: number;\r\n  duration: string;\r\n  serviceDescription?: string;\r\n  image?: string;\r\n}\r\n\r\nconst ServiceManagement: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const { service, loading, error } = useSelector((state: RootState) => state.service);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchServices());\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = (serviceId: string) => {\r\n    if (confirm(\"Are you sure you want to delete this service?\")) {\r\n      dispatch(deleteService(serviceId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full px-4 py-6 bg-[#2B2B2B] min-h-screen\">\r\n         <button\r\n          className=\"mt-3 w-full py-1.5 text-sm font-semibold rounded-md text-[#2B2B2B] bg-[#D6D7D6] hover:bg-green-500 hover:text-white transition duration-200\" >\r\n          Add Service\r\n          </button>\r\n      <h2 className=\"text-3xl font-bold text-center text-[#D6D7D6] mb-10\">\r\n        Our Services\r\n      </h2>\r\n\r\n      {/* Loading / Error */}\r\n      {loading && (\r\n        <p className=\"text-center text-yellow-400 font-semibold\">Loading...</p>\r\n      )}\r\n      {error && (\r\n        <p className=\"text-center text-red-500 font-semibold\">{error}</p>\r\n      )}\r\n\r\n      {/* Grid */}\r\n      <div className=\"grid grid-cols-2 gap-6 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 mt-4\">\r\n        {Array.isArray(service) && service.length > 0 ? (\r\n          service.map((item: Service) => (\r\n            <div key={item._id} className=\"flex justify-center\">\r\n              <div className=\"relative w-44 p-3 bg-[#1B1B1A] border border-[#757442] rounded-2xl shadow-md hover:shadow-lg hover:scale-105 transition-transform duration-300 ease-in-out\">\r\n                \r\n                {/* Image */}\r\n                <div className=\"w-full h-32 relative mb-3 overflow-hidden rounded-xl border border-[#757442]\">\r\n                  <img\r\n                    src={item.image || \"/placeholder-service.jpg\"}\r\n                    alt={item.serviceName}\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Info */}\r\n                <div className=\"text-center text-[#D6D7D6] space-y-1\">\r\n                  <h6 className=\"text-md font-bold truncate\">{item.serviceName}</h6>\r\n                  <p className=\"text-sm text-[#757442] font-semibold\">\r\n                    â‚¹ {item.serviceCharge}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-400\">{item.duration}</p>\r\n                  <p className=\"text-xs text-gray-300 line-clamp-2\">\r\n                    {item.serviceDescription}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Delete Button */}\r\n                <button\r\n                  onClick={() => handleDelete(item._id)}\r\n                  className=\"mt-3 w-full py-1.5 text-sm font-semibold rounded-md text-[#2B2B2B] bg-[#D6D7D6] hover:bg-red-500 hover:text-white transition duration-200\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"col-span-full text-center text-gray-500 italic mt-6\">\r\n            No services found.\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceManagement;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAgBA,MAAM,oBAA8B;IAClC,MAAM,WAAwB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IACxC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,OAAO;IAEnF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,0IAAA,CAAA,gBAAa,AAAD;IACvB,GAAG;QAAC;KAAS;IAEb,MAAM,eAAe,CAAC;QACpB,IAAI,QAAQ,kDAAkD;YAC5D,SAAS,CAAA,GAAA,0IAAA,CAAA,gBAAa,AAAD,EAAE;QACzB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACV,8OAAC;gBACA,WAAU;0BAA+I;;;;;;0BAG7J,8OAAC;gBAAG,WAAU;0BAAsD;;;;;;YAKnE,yBACC,8OAAC;gBAAE,WAAU;0BAA4C;;;;;;YAE1D,uBACC,8OAAC;gBAAE,WAAU;0BAA0C;;;;;;0BAIzD,8OAAC;gBAAI,WAAU;0BACZ,MAAM,OAAO,CAAC,YAAY,QAAQ,MAAM,GAAG,IAC1C,QAAQ,GAAG,CAAC,CAAC,qBACX,8OAAC;wBAAmB,WAAU;kCAC5B,cAAA,8OAAC;4BAAI,WAAU;;8CAGb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACC,KAAK,KAAK,KAAK,IAAI;wCACnB,KAAK,KAAK,WAAW;wCACrB,WAAU;;;;;;;;;;;8CAKd,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA8B,KAAK,WAAW;;;;;;sDAC5D,8OAAC;4CAAE,WAAU;;gDAAuC;gDAC/C,KAAK,aAAa;;;;;;;sDAEvB,8OAAC;4CAAE,WAAU;sDAAyB,KAAK,QAAQ;;;;;;sDACnD,8OAAC;4CAAE,WAAU;sDACV,KAAK,kBAAkB;;;;;;;;;;;;8CAK5B,8OAAC;oCACC,SAAS,IAAM,aAAa,KAAK,GAAG;oCACpC,WAAU;8CACX;;;;;;;;;;;;uBA5BK,KAAK,GAAG;;;;8CAmCpB,8OAAC;oBAAE,WAAU;8BAAsD;;;;;;;;;;;;;;;;;AAO7E;uCAEe","debugId":null}}]
}